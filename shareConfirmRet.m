//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 2.0
// Date Of Creation: 8/27/2014 3:43:10 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shareConfirmRet.h" 


@implementation shareConfirmRet

-(id)initWithArray:(NSArray*)array {
    self = [super init];
    if (self) {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"globalReturn"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setGlobalReturn:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"serverCategoryID"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setServerCategoryID:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"categoryType"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCategoryType:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"categoryName"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCategoryName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"categoryColor"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCategoryColor:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}
-(NSString*)toString:(BOOL)addNameWrap {
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shareConfirmRet>" ];
    [nsString appendFormat:@"<globalReturn>%d</globalReturn>" , [self globalReturn]];
    [nsString appendFormat:@"<serverCategoryID>%d</serverCategoryID>" , [self serverCategoryID]];
    [nsString appendFormat:@"<categoryType>%d</categoryType>" , [self categoryType]];
    if (self.categoryName != nil) {
        [nsString appendFormat:@"<categoryName>%@</categoryName>" , [self categoryName]];
    }
    if (self.categoryColor != nil) {
        [nsString appendFormat:@"<categoryColor>%@</categoryColor>" , [self categoryColor]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</shareConfirmRet>" ];
    return nsString;
}
#pragma mark - NSCoding
-(id)initWithCoder:(NSCoder *)decoder{
    self = [super init];
    if (self){
        self.globalReturn = [decoder decodeInt32ForKey:@"globalReturn"];
        self.serverCategoryID = [decoder decodeInt32ForKey:@"serverCategoryID"];
        self.categoryType = [decoder decodeInt32ForKey:@"categoryType"];
        self.categoryName = [decoder decodeObjectForKey:@"categoryName"];
        self.categoryColor = [decoder decodeObjectForKey:@"categoryColor"];
    }
    return self;
}
-(void)encodeWithCoder:(NSCoder *)encoder{
    [encoder encodeInt32:self.globalReturn forKey:@"globalReturn"];
    [encoder encodeInt32:self.serverCategoryID forKey:@"serverCategoryID"];
    [encoder encodeInt32:self.categoryType forKey:@"categoryType"];
    [encoder encodeObject:self.categoryName forKey:@"categoryName"];
    [encoder encodeObject:self.categoryColor forKey:@"categoryColor"];
}
-(id)copyWithZone:(NSZone *)zone {
    shareConfirmRet *finalCopy = [[[self class] allocWithZone: zone] init];
    
    finalCopy.globalReturn = self.globalReturn;
    
    finalCopy.serverCategoryID = self.serverCategoryID;
    
    finalCopy.categoryType = self.categoryType;
    
    NSString *copy4 = [self.categoryName copy];
    finalCopy.categoryName = copy4;
    
    NSString *copy5 = [self.categoryColor copy];
    finalCopy.categoryColor = copy5;
    
    return finalCopy;
}

@end
